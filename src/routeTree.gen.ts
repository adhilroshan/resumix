/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SetupIndexImport } from './routes/setup/index'
import { Route as HistoryIndexImport } from './routes/history/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as CompareIndexImport } from './routes/compare/index'
import { Route as AnalysisIndexImport } from './routes/analysis/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SetupIndexRoute = SetupIndexImport.update({
  id: '/setup/',
  path: '/setup/',
  getParentRoute: () => rootRoute,
} as any)

const HistoryIndexRoute = HistoryIndexImport.update({
  id: '/history/',
  path: '/history/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const CompareIndexRoute = CompareIndexImport.update({
  id: '/compare/',
  path: '/compare/',
  getParentRoute: () => rootRoute,
} as any)

const AnalysisIndexRoute = AnalysisIndexImport.update({
  id: '/analysis/',
  path: '/analysis/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/analysis/': {
      id: '/analysis/'
      path: '/analysis'
      fullPath: '/analysis'
      preLoaderRoute: typeof AnalysisIndexImport
      parentRoute: typeof rootRoute
    }
    '/compare/': {
      id: '/compare/'
      path: '/compare'
      fullPath: '/compare'
      preLoaderRoute: typeof CompareIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/history/': {
      id: '/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/setup/': {
      id: '/setup/'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analysis': typeof AnalysisIndexRoute
  '/compare': typeof CompareIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/history': typeof HistoryIndexRoute
  '/setup': typeof SetupIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analysis': typeof AnalysisIndexRoute
  '/compare': typeof CompareIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/history': typeof HistoryIndexRoute
  '/setup': typeof SetupIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/analysis/': typeof AnalysisIndexRoute
  '/compare/': typeof CompareIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/history/': typeof HistoryIndexRoute
  '/setup/': typeof SetupIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analysis'
    | '/compare'
    | '/dashboard'
    | '/history'
    | '/setup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/analysis' | '/compare' | '/dashboard' | '/history' | '/setup'
  id:
    | '__root__'
    | '/'
    | '/analysis/'
    | '/compare/'
    | '/dashboard/'
    | '/history/'
    | '/setup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalysisIndexRoute: typeof AnalysisIndexRoute
  CompareIndexRoute: typeof CompareIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  HistoryIndexRoute: typeof HistoryIndexRoute
  SetupIndexRoute: typeof SetupIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalysisIndexRoute: AnalysisIndexRoute,
  CompareIndexRoute: CompareIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  HistoryIndexRoute: HistoryIndexRoute,
  SetupIndexRoute: SetupIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analysis/",
        "/compare/",
        "/dashboard/",
        "/history/",
        "/setup/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/analysis/": {
      "filePath": "analysis/index.tsx"
    },
    "/compare/": {
      "filePath": "compare/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/history/": {
      "filePath": "history/index.tsx"
    },
    "/setup/": {
      "filePath": "setup/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
